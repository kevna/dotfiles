function _gitcd() {
	_cd $@
	local root=$(git rev-parse --show-toplevel 2>/dev/null)
	local completing="${COMP_WORDS[COMP_CWORD]}"
	if [ "$root" != "" ] && [ "$root" != "$(pwd)" ]; then
		if [ "$completing" != "" ]; then
			COMPREPLY+=($(find $root -maxdepth 1 -type d -name "$completing*" 2>/dev/null | sed "s|^$HOME|~|"))
		else
			COMPREPLY+=("$(echo $root | sed "s|^$HOME|~|")")
		fi
	fi
	return 0
}
complete -o nospace -o filenames -F _gitcd cd pushd

function _make() {
	local completing="${COMP_WORDS[COMP_CWORD]}"
	if [ -f 'Makefile' ]; then
		local database="$(cat 'Makefile')"
	else
		local database="$(make -qp)"
	fi
	local patterns=($(echo "$database" | sed -n -E 's/^([^.#][^:=]*)(:$|:\s+.*$)/\1/p' | sort -u))
	for pattern in ${patterns[@]}; do
		if [[ "$pattern" == *"%"* ]]; then
			# Putting this on a temporary list lets us have the basic target names first
			local globs+=($(compgen -G "${pattern/\%/**/*}" | grep "^$completing"))
		elif [[ "$pattern" == "$completing"* ]]; then
			COMPREPLY+=($pattern)
		fi
	done
	# Filter out the duplicates that matched multiple patterns
	COMPREPLY+=($(printf '%s\n' "${globs[@]}" | sort -u))
	return 0
}
complete -o nosort -F _make make
