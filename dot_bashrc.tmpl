# Source the global bashrc so we don't miss any system configuration
. /etc/bash.bashrc
if [ -z $BASH_PROFILE ]; then
	. ~/.bash_profile
fi

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Programmable completetion (eg subcommands/args) in case it's not enabled by /etc/bash.bashrc
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
  # user's personal completion is loadeded on top of the global ones
  if [ -f ~/.config/bash/completion ]; then
    . ~/.config/bash/completion
  fi
fi

# History drops lines starting with space and doesn't store multiple of the same command
HISTCONTROL=ignoreboth
shopt -s histappend

# Enable '**' glob (recursive *)
shopt -s globstar

# ensure dircolors are loaded
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
fi
# Aliases to add color to common common commands
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# debian standard ls aliases
alias ll='ls -halF'
alias la='ls -A'
alias l='ls -CF'

alias debcrawler="apt-cache search '' | cut -d' ' -f1 | fzf --multi --reverse --preview 'apt-cache show {1}' --bind=space:toggle-preview | xargs -ro sudo apt install"
alias cg='cd `git rev-parse --show-toplevel`'
function czedit() {
	local CZ=$(chezmoi source-path $1)
	nvim -d $1 $CZ
}
function _shortwd() {
	echo "${1:-$PWD}" | sed "s|^$HOME|~|" | sed -r 's|(\W*\w)[^/]+/|\1/|g'
}
function _worktree_list() {
	if [ -z $1 ]; then
		git worktree list
	else
		git worktree list | awk '/'"${1/\//\\/}"'/ {print $1}' | head -n 1
	fi
}
function wt() {
	# Switch between git worktrees with ease.
	# loosely inspired by https://github.com/yankeexe/git-worktree-switcher
	local directory=
	if [ -z $1 ] || [ $1 == "list" ]; then
		_worktree_list
		return 0
	elif [ $1 == "add" ]; then
		if [ -z $2 ]; then
			return 128
		fi
		# Create a new worktree parallel to the first worktree (master or bare)
		# ie. from a branchname make repo/branchname (with subdirs for feeature/)
		directory=$(dirname $(_worktree_list '/'))/$2
		git worktree add "$directory"
	elif [ $1 == "-" ]; then
		# Emulate behaviour of cd -
		directory=$OLDWT
	else
		directory=$(_worktree_list "$1")
	fi
	if [ $PWD != "$directory" ] && [ -d "$directory" ]; then
		OLDWT=$PWD
		cd $directory
		return 0
	fi
	return 128
}


EDITOR="nvim"
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow'
export FZF_DEFAULT_OPTS="--cycle --preview 'pygmentize -O style=gruvbox-dark {} 2>/dev/null || cat {}'"

PROMPT_COMMAND="PS_ERR=\${?#0}"
{{/* PS1='\[\a\e[32;1m\]\u@\h\[\e[m\]:\[\e[94m\]$(_shortwd)\[\e[m\]$(gitline.sh) \[\e[91;1m\]${PS_ERR:-\[\e[92;1m\]0}\[\e[m\]\$ ' */}}
PS1='\[\a\e[32;1m\]\u@\h\[\e[m\]:$(statusline) \[\e[91;1m\]${PS_ERR:-\[\e[92;1m\]0}\[\e[m\]\$ '
